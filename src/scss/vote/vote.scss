@import '../_media.scss';

.slide__row {

    display: flex;
    flex-direction: column;
    align-items: center;

    &--left, &--right {
        justify-content: space-between;
        padding-top: 2px;
        padding-bottom: 2px;
    }

    &--middle {
        justify-content: space-between;
        height: 100%;
    }
}

.slide__column {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    &--2 > .vote__item:first-child, &--4 .vote__item:first-child {
        margin-bottom: 4px;
    }

    &--4 {
        margin-left: -1px;
    }

    &--3 > .vote__arrow:first-child {
        margin-bottom: 56px;
    }
}

.vote {
    flex: 1;
    display: flex;
    justify-content: space-between;
    max-height: 526px;
    width: 100%;
    margin: 23px auto 0;

    &--landscape {
        display: none;
    }

    @include _landscape_668 {
        &--landscape {
            display: flex;
        }
        &--portrait {
            display: none;
        }
        margin-top: 5px;
        padding-left: 7px;
        padding-right: 8px;
    }
}

.vote__item {
    width: 104px;
    height: 142px;
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 6px;
    position: relative;

    &__pic {
        margin-top: 20px;
        width: 64px;
        height: 64px;
        border-radius: 100px;
    }

    &__photo {
        border-radius: 50%;
        height: 64px;
        width: 100%;
        object-fit: cover;
        object-position: 50% 50%;
        filter: var(--filter);
    }
    
    &__name {
        margin: 6px 4px;
        font-family: 'Roboto Medium';
        font-size: 16px;
        line-height: 18px;
        text-align: center;
    }

    &__awards {
        position: absolute;
        font-size: 32px;
        line-height: 32px;
        font-family: 'Roboto Bold';        
        top: -2px;
        z-index: 1;
    }

    &--selected {
        background: var(--person-accent-background);
        box-shadow: var(--person-accent-shadow);
        filter: var(--no-filter);
    }

    &:hover {
        background: var(--person-hover-background);
        box-shadow: var(--person-hover-shadow);
    }
}

.vote__arrow {

    filter: var(--filter);

    &--up {
    }

    &--down {
        transform: rotate(180deg);
    }

    & > path {
        fill: var(--vote-button-background);
    }

    &--selected {
        & > path {
            fill: var(--vote-button-hover-background);
        }
    }

    &:hover, &:disabled {

        & > path {
            fill: var(--vote-button-hover-background);
        }
    }
}